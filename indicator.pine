//@version=5
indicator("VPA Indicator", overlay=true)

showLongs = input.bool(true, title="Show Long Signals")
showShorts = input.bool(true, title="Show Short Signals")
showVolumeAnomalies = input.bool(true, title="Show Volume Anomalies")
analyzeMarketSentiment = input.bool(true, title="Market Sentiment Analysis")
onlyIndicateSignalsAtLevels = input.bool(true, title="Only Indicate Signals at Price Levels")
priceLevelsString = input.string("0.0", title="Price Levels (comma-delimited list)")
volumeSMALength = input(50, title="Volume SMA Length")
acceptableVolumeThreshold = input(0.0, title="Acceptable Volume Threshold (% more than average)")
proximityThreshold = input(0.15, title="Proximity Threshold ($)")
strengthThreshold = input(0.55, title="Strength Threshold (%)")
sentimentThreshold = input(0.66, title="Market Sentiment Threshold (%)")
priceLevels = str.split(priceLevelsString, ",")

volumeSMA = ta.sma(volume, volumeSMALength)
sufficientVolume = volume > volumeSMA + (volumeSMA * acceptableVolumeThreshold)
isVolumeHigher = volume > volume[1]

// Get current, previous, and previous previous candles buy/sell volume and average the two previous candle's volume
buyVolume = (high==low) ? 0 : volume *  (close-low)  / (high-low)
sellVolume = (high==low) ? 0 : volume * (high-close) / (high-low)
prevBuyVolume = (high[1]==low[1]) ? 0 : volume[1] *  (close[1]-low[1])  / (high[1]-low[1])
prevSellVolume = (high[1]==low[1]) ? 0 : volume[1] * (high[1]-close[1]) / (high[1]-low[1])
prevPrevBuyVolume = (high[2]==low[2]) ? 0 : volume[2] *  (close[2]-low[2])  / (high[2]-low[2])
prevPrevSellVolume = (high[2]==low[2]) ? 0 : volume[2] * (high[2]-close[2]) / (high[2]-low[2])
prevAvgBuyVolume = (prevBuyVolume + prevPrevBuyVolume) / 2
prevAvgSellVolume = (prevSellVolume + prevPrevSellVolume) / 2

// Calculate the open/close and highLow range of the current and previous candles
candleOpenCloseRange = math.abs(close - open)
candleHighLowRange = math.abs(high - low)
prevCandleOpenCloseRange = math.abs(close[1] - open[1])
prevCandleHighLowRange = math.abs(high[1] - low[1])

// Only want to include dojis in the signals if they have higher than average volume
isDoji = math.abs(close - open) < (candleHighLowRange * 0.1) and volume > volume[1] * 1.33

// Determine if the current candle is close enough to a price level based on the proximity threshold. 
// A candle is at support if any part of the bottom wick is within the proximity threshold of a price level
// A candle is at resistance if any part of the top wick is within the proximity threshold of a price level
isAtSupport = false
isAtResistance = false
if onlyIndicateSignalsAtLevels
    for level in priceLevels
        levelFloat = str.tonumber(level)
        priceLevelRangeStart = levelFloat - proximityThreshold
        priceLevelRangeEnd = levelFloat + proximityThreshold
        if ((isDoji and open > levelFloat) or close > levelFloat) and (priceLevelRangeStart >= open and priceLevelRangeStart <= low) or (priceLevelRangeEnd >= open and priceLevelRangeEnd <= low) or (open >= priceLevelRangeStart and open <= priceLevelRangeEnd) or (low >= priceLevelRangeStart and low <= priceLevelRangeEnd)
            isAtSupport := true
            break
    for level in priceLevels
        levelFloat = str.tonumber(level)
        priceLevelRangeStart = levelFloat - proximityThreshold
        priceLevelRangeEnd = levelFloat + proximityThreshold
        if ((isDoji and open < levelFloat) or close < levelFloat) and (priceLevelRangeStart >= open and priceLevelRangeStart <= high) or (priceLevelRangeEnd >= open and priceLevelRangeEnd <= high) or (open >= priceLevelRangeStart and open <= priceLevelRangeEnd) or (high >= priceLevelRangeStart and high <= priceLevelRangeEnd)
            isAtResistance := true
            break

// Calculate top/bottom wicks and determine sell/buy pressure for determining if the candle is relatively strong/weak
prevCandleTopWick = close[1] > open[1] ? math.abs(high[1] - close[1]) : math.abs(high[1] - open[1])
prevCandleBottomWick = close[1] > open[1] ? math.abs(open[1] - low[1]) : math.abs(close[1] - low[1])
significantSellPressureOnPreviousCandle = prevCandleTopWick > math.abs(high[1] - low[1]) - prevCandleTopWick
significantBuyPressureOnPreviousCandle = prevCandleBottomWick > math.abs(high[1] - low[1]) - prevCandleBottomWick

// If the previous candle was red the current candle must be green and one of the below must apply:
//      1. engulf at least strength threshold % of the previous candle's range
//      2. the previous candle must have significant buy pressure and engulf at least half strength threshold % of the previous candle's range
// If the previous candle was green the current candle must be green and more aggressive based on body and bottom wick.
candleIsRelativelyStrong = close > open and (close[1] < open[1] and (candleOpenCloseRange > prevCandleOpenCloseRange * strengthThreshold or (significantBuyPressureOnPreviousCandle and candleOpenCloseRange > prevCandleOpenCloseRange * strengthThreshold * 0.5)) or (close[1] > open[1] and (candleOpenCloseRange > prevCandleOpenCloseRange or math.abs(low - open) > prevCandleHighLowRange * strengthThreshold)))
// The top wick should not be larger than the body + the bottom wick
bullishDirectional = math.abs(high - close) < math.abs(close - low)
isBullishCandle = candleIsRelativelyStrong and bullishDirectional

// If the previous candle was green the current candle must be red and one of the below must apply:
//      1. either engulf at least strength threshold % of the previous candle's range
//      2. the previous candle must have significant sell pressure and engulf at least half strength threshold % of the previous candle's range. 
// If the previous candle was red the current candle must be red and more aggressive based on body and top wick.
candleIsRelativelyWeak = close < open and (close[1] > open[1] and (candleOpenCloseRange > prevCandleOpenCloseRange * strengthThreshold or (significantSellPressureOnPreviousCandle and candleOpenCloseRange > prevCandleOpenCloseRange * strengthThreshold * 0.5)) or (close[1] < open[1] and (candleOpenCloseRange > prevCandleOpenCloseRange or math.abs(high - open) > prevCandleHighLowRange * strengthThreshold)))
// The bottom wick should not be larger than the body + the top wick
bearishDirectional = math.abs(close - low) < math.abs(high - close)
isBearishCandle = candleIsRelativelyWeak and bearishDirectional

// Check market sentiment. A majority of QQQ, top 6 SPY sectors, and top 3 SPY stocks must have buy/sell volume in agreement. Ticker SPY weightings are from https://www.ssga.com/us/en/intermediary/etfs/funds/spdr-sp-500-etf-trust-spy 
buyingSentiment = 0.0

// QQQ and XLK must be in agreement for the XLK buying sentiment to be there
[tickerVolumeQQQ, tickerHighQQQ, tickerLowQQQ, tickerCloseQQQ] = request.security("QQQ", timeframe.period, [volume, high, low, close])
[tickerVolumeXLK, tickerHighXLK, tickerLowXLK, tickerCloseXLK] = request.security("XLK", timeframe.period, [volume, high, low, close])
tickerBuyVolumeQQQ = (tickerHighQQQ == tickerLowQQQ) ? 0 : tickerVolumeQQQ * (tickerCloseQQQ - tickerLowQQQ)  / (tickerHighQQQ - tickerLowQQQ)
tickerSellVolumeQQQ = (tickerHighQQQ == tickerLowQQQ) ? 0 : tickerVolumeQQQ * (tickerHighQQQ - tickerCloseQQQ)  / (tickerHighQQQ - tickerLowQQQ)
tickerSPYWeightXLK = 27.5
tickerBuyVolumeXLK = (tickerHighXLK == tickerLowXLK) ? 0 : tickerVolumeXLK * (tickerCloseXLK - tickerLowXLK)  / (tickerHighXLK - tickerLowXLK)
tickerSellVolumeXLK = (tickerHighXLK == tickerLowXLK) ? 0 : tickerVolumeXLK * (tickerHighXLK - tickerCloseXLK)  / (tickerHighXLK - tickerLowXLK)
buyingSentiment += tickerBuyVolumeXLK > tickerSellVolumeXLK and tickerBuyVolumeQQQ > tickerSellVolumeQQQ ? tickerSPYWeightXLK : 0

[tickerVolumeXLV, tickerHighXLV, tickerLowXLV, tickerCloseXLV] = request.security("XLV", timeframe.period, [volume, high, low, close])
tickerSPYWeightXLV = 13.59
tickerBuyVolumeXLV = (tickerHighXLV == tickerLowXLV) ? 0 : tickerVolumeXLV * (tickerCloseXLV - tickerLowXLV) / (tickerHighXLV - tickerLowXLV)
tickerSellVolumeXLV = (tickerHighXLV == tickerLowXLV) ? 0 : tickerVolumeXLV * (tickerHighXLV - tickerCloseXLV) / (tickerHighXLV - tickerLowXLV)
buyingSentiment += tickerBuyVolumeXLV > tickerSellVolumeXLV ? tickerSPYWeightXLV : 0

[tickerVolumeXLF, tickerHighXLF, tickerLowXLF, tickerCloseXLF] = request.security("XLF", timeframe.period, [volume, high, low, close])
tickerSPYWeightXLF = 12.67
tickerBuyVolumeXLF = (tickerHighXLF == tickerLowXLF) ? 0 : tickerVolumeXLF * (tickerCloseXLF - tickerLowXLF) / (tickerHighXLF - tickerLowXLF)
tickerSellVolumeXLF = (tickerHighXLF == tickerLowXLF) ? 0 : tickerVolumeXLF * (tickerHighXLF - tickerCloseXLF) / (tickerHighXLF - tickerLowXLF)
buyingSentiment += tickerBuyVolumeXLF > tickerSellVolumeXLF ? tickerSPYWeightXLF : 0

[tickerVolumeXLY, tickerHighXLY, tickerLowXLY, tickerCloseXLY] = request.security("XLY", timeframe.period, [volume, high, low, close])
tickerSPYWeightXLY = 10.44
tickerBuyVolumeXLY = (tickerHighXLY == tickerLowXLY) ? 0 : tickerVolumeXLY * (tickerCloseXLY - tickerLowXLY) / (tickerHighXLY - tickerLowXLY)
tickerSellVolumeXLY = (tickerHighXLY == tickerLowXLY) ? 0 : tickerVolumeXLY * (tickerHighXLY - tickerCloseXLY) / (tickerHighXLY - tickerLowXLY)
buyingSentiment += tickerBuyVolumeXLY > tickerSellVolumeXLY ? tickerSPYWeightXLY : 0

[tickerVolumeXLC, tickerHighXLC, tickerLowXLC, tickerCloseXLC] = request.security("XLC", timeframe.period, [volume, high, low, close])
tickerSPYWeightXLC = 8.59
tickerBuyVolumeXLC = (tickerHighXLC == tickerLowXLC) ? 0 : tickerVolumeXLC * (tickerCloseXLC - tickerLowXLC) / (tickerHighXLC - tickerLowXLC)
tickerSellVolumeXLC = (tickerHighXLC == tickerLowXLC) ? 0 : tickerVolumeXLC * (tickerHighXLC - tickerCloseXLC) / (tickerHighXLC - tickerLowXLC)
buyingSentiment += tickerBuyVolumeXLC > tickerSellVolumeXLC ? tickerSPYWeightXLC : 0

[tickerVolumeXLI, tickerHighXLI, tickerLowXLI, tickerCloseXLI] = request.security("XLI", timeframe.period, [volume, high, low, close])
tickerSPYWeightXLI = 8.5
tickerBuyVolumeXLI = (tickerHighXLI == tickerLowXLI) ? 0 : tickerVolumeXLI * (tickerCloseXLI - tickerLowXLI) / (tickerHighXLI - tickerLowXLI)
tickerSellVolumeXLI = (tickerHighXLI == tickerLowXLI) ? 0 : tickerVolumeXLI * (tickerHighXLI - tickerCloseXLI) / (tickerHighXLI - tickerLowXLI)
buyingSentiment += tickerBuyVolumeXLI > tickerSellVolumeXLI ? tickerSPYWeightXLI : 0

[tickerVolumeAAPL, tickerHighAAPL, tickerLowAAPL, tickerCloseAAPL] = request.security("AAPL", timeframe.period, [volume, high, low, close])
tickerSPYWeightAAPL = 7.46
tickerBuyVolumeAAPL = (tickerHighAAPL == tickerLowAAPL) ? 0 : tickerVolumeAAPL * (tickerCloseAAPL - tickerLowAAPL) / (tickerHighAAPL - tickerLowAAPL)
tickerSellVolumeAAPL = (tickerHighAAPL == tickerLowAAPL) ? 0 : tickerVolumeAAPL * (tickerHighAAPL - tickerCloseAAPL) / (tickerHighAAPL - tickerLowAAPL)
buyingSentiment += tickerBuyVolumeAAPL > tickerSellVolumeAAPL ? tickerSPYWeightAAPL : 0

[tickerVolumeMSFT, tickerHighMSFT, tickerLowMSFT, tickerCloseMSFT] = request.security("MSFT", timeframe.period, [volume, high, low, close])
tickerSPYWeightMSFT = 6.72
tickerBuyVolumeMSFT = (tickerHighMSFT == tickerLowMSFT) ? 0 : tickerVolumeMSFT * (tickerCloseMSFT - tickerLowMSFT) / (tickerHighMSFT - tickerLowMSFT)
tickerSellVolumeMSFT = (tickerHighMSFT == tickerLowMSFT) ? 0 : tickerVolumeMSFT * (tickerHighMSFT - tickerCloseMSFT) / (tickerHighMSFT - tickerLowMSFT)
buyingSentiment += tickerBuyVolumeMSFT > tickerSellVolumeMSFT ? tickerSPYWeightMSFT : 0

[tickerVolumeAMZN, tickerHighAMZN, tickerLowAMZN, tickerCloseAMZN] = request.security("AMZN", timeframe.period, [volume, high, low, close])
tickerSPYWeightAMZN = 3.07
tickerBuyVolumeAMZN = (tickerHighAMZN == tickerLowAMZN) ? 0 : tickerVolumeAMZN * (tickerCloseAMZN - tickerLowAMZN) / (tickerHighAMZN - tickerLowAMZN)
tickerSellVolumeAMZN = (tickerHighAMZN == tickerLowAMZN) ? 0 : tickerVolumeAMZN * (tickerHighAMZN - tickerCloseAMZN) / (tickerHighAMZN - tickerLowAMZN)
buyingSentiment += tickerBuyVolumeAMZN > tickerSellVolumeAMZN ? tickerSPYWeightAMZN : 0

totalWeightings = tickerSPYWeightXLK + tickerSPYWeightXLV + tickerSPYWeightXLF + tickerSPYWeightXLY + tickerSPYWeightXLC + tickerSPYWeightXLI + tickerSPYWeightAAPL + tickerSPYWeightMSFT + tickerSPYWeightAMZN

// Plot volume anomalies and indications of long and short signals
// + signals are candles that have more volume than the previous candle
longSignal = showLongs and ((analyzeMarketSentiment and buyingSentiment >= totalWeightings * sentimentThreshold) or not analyzeMarketSentiment) and (isBullishCandle or isDoji) and buyVolume > prevAvgBuyVolume and (sellVolume < prevAvgSellVolume or isDoji) and sufficientVolume and ((isAtSupport and onlyIndicateSignalsAtLevels) or not onlyIndicateSignalsAtLevels) and buyVolume > sellVolume
shortSignal = showShorts and ((analyzeMarketSentiment and buyingSentiment <= (totalWeightings - totalWeightings * sentimentThreshold)) or not analyzeMarketSentiment) and (isBearishCandle or isDoji) and sellVolume > prevAvgSellVolume and (buyVolume < prevAvgBuyVolume or isDoji) and sufficientVolume and ((isAtResistance and onlyIndicateSignalsAtLevels) or not onlyIndicateSignalsAtLevels) and sellVolume > buyVolume
bullishVolumeAnomaly = showVolumeAnomalies and close < open and close[1] < open[1] and candleOpenCloseRange < prevCandleOpenCloseRange and volume > volume[1] and sufficientVolume
bearishVolumeAnomaly = showVolumeAnomalies and close > open and close[1] > open[1] and candleOpenCloseRange < prevCandleOpenCloseRange and volume > volume[1] and sufficientVolume

plotshape(bullishVolumeAnomaly and not longSignal, title="Volume Anomaly", location=location.belowbar, color=color.rgb(255, 238, 88), transp=0, style=shape.triangleup, text="Anomaly")
plotshape(bearishVolumeAnomaly and not shortSignal, title="Volume Anomaly", location=location.abovebar, color=color.rgb(255, 238, 88), transp=0, style=shape.triangledown, text="Anomaly")
plotshape(longSignal and not bullishVolumeAnomaly and not isVolumeHigher, title="Long", location=location.belowbar, color=color.rgb(30, 143, 55), transp=0, style=shape.triangleup, text="Long")
plotshape(shortSignal and not bearishVolumeAnomaly and not isVolumeHigher, title="Short", location=location.abovebar, color=color.rgb(241, 90, 103), transp=0, style=shape.triangledown, text="Short")
plotshape(longSignal and not bullishVolumeAnomaly and isVolumeHigher, title="Long+", location=location.belowbar, color=color.rgb(30, 143, 55), transp=0, style=shape.triangleup, text="Long+")
plotshape(shortSignal and not bearishVolumeAnomaly and isVolumeHigher, title="Short+", location=location.abovebar, color=color.rgb(241, 90, 103), transp=0, style=shape.triangledown, text="Short+")
plotshape(longSignal and bullishVolumeAnomaly, title="Long + Anomaly", location=location.belowbar, color=color.rgb(30, 143, 55), transp=0, style=shape.triangleup, text="Long + Anomaly")
plotshape(shortSignal and bearishVolumeAnomaly, title="Short + Anomaly", location=location.abovebar, color=color.rgb(241, 90, 103), transp=0, style=shape.triangledown, text="Short + Anomaly")